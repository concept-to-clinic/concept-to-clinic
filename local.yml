version: '2.1'

volumes:
  postgres_data_dev: {}

services:
  postgres:
    image: postgres:9.6
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=concepttoclinic

  base:
    build:
      context: .
      dockerfile: ./compose/base/Dockerfile-dev
    container_name: base
    image: concepttoclinic_base

  interface:
    build:
      context: .
      dockerfile: ./compose/interface/Dockerfile-dev-api
    command: /start-dev.sh
    depends_on:
      - postgres
      - base
      - prediction
    environment:
      - POSTGRES_USER=concepttoclinic
      - USE_DOCKER=yes
      - SECRET_KEY=notverysecret
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=config.settings.local
    volumes:
      - ./interface/:/app:cached
      - ./tests/assets/test_image_data/small:/images:cached
      - ./.git/logs/HEAD:/HEAD:cached
      - ./prediction/src/algorithms/classify/assets/:/classify_models:cached
    ports:
      - "8000:8000"

  vue:
    build:
      context: .
      dockerfile: ./compose/interface/Dockerfile-dev-vue
    command: npm run dev
    depends_on:
      - interface
    volumes:
      - ./interface/frontend/src:/app/src:cached
      - ./interface/frontend/build:/app/build:cached
      - ./interface/frontend/config:/app/config:cached
      - ./interface/frontend/dist:/app/dist:cached
      - ./interface/frontend/static:/app/static:cached
      - ./interface/frontend/test:/app/test:cached
      - ./.git/logs/HEAD:/app/HEAD:cached
    links:
      - interface
    ports:
      - "8080:8080"

  vue_unit_test:
    build:
      context: .
      dockerfile: ./compose/interface/Dockerfile-unit-test-vue
    command: npm run unit
    depends_on:
      - vue
    environment:
      NODE_ENV: test
    volumes:
      - ./interface/frontend/src:/app/src:cached
      - ./interface/frontend/test:/app/test:cached

  vue_e2e_test:
    build:
      context: .
      dockerfile: ./compose/interface/Dockerfile-e2e-test-vue
    command: npm run e2e
    environment:
      NODE_ENV: test
    volumes:
      - ./interface/frontend/src:/app/src:cached
      - ./interface/frontend/test:/app/test:cached
    depends_on:
      - vue
      - selenium_hub
      - chrome
      - firefox

  selenium_hub:
    image: selenium/hub
    environment:
      GRID_BROWSER_TIMEOUT: 120000
      GRID_TIMEOUT: 120000
      VIRTUAL_HOST: selenium.hub.docker
    ports:
      - "4444:4444"

  firefox:
    image: selenium/node-firefox
    environment: &SELENIUM_NODE_ENV
      # this is a necessary workaround due to a known bug
      # https://github.com/SeleniumHQ/docker-selenium/issues/133
      HUB_PORT_4444_TCP_ADDR: selenium_hub
      HUB_PORT_4444_TCP_PORT: 4444
    depends_on:
      - selenium_hub

  chrome:
    image: selenium/node-chrome
    environment:
      <<: *SELENIUM_NODE_ENV
    depends_on:
      - selenium_hub

  prediction:
    build:
      context: .
      dockerfile: ./compose/prediction/Dockerfile-dev
    command: python -m flask run --host=0.0.0.0 --port=8001
    depends_on:
      - base
    environment:
      - FLASK_DEBUG=1
      - FLASK_APP=src/factory.py
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
      - RUN_SLOW_TESTS=false
      - TESTS_TIMEOUT=1
    volumes:
      - ./prediction/:/app:cached
      - ./tests/assets/test_image_data/small:/images:cached
      - ./tests/assets/test_image_data/full:/images_full:cached
      - ./prediction/src/algorithms/classify/assets/:/classify_models:cached
      - ./prediction/src/algorithms/identify/assets/:/identify_models:cached
      - ./data/:/app/data:cached
    ports:
      - "8001:8001"

  compile_docs:
    restart: always
    depends_on:
      - postgres
      - base
    environment:
      - POSTGRES_USER=concepttoclinic
      - USE_DOCKER=yes
      - SECRET_KEY=notverysecret
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=config.settings.local
    build:
      context: .
      dockerfile: ./compose/documentation/Dockerfile-dev
    volumes:
      - ./:/app:cached
    command: bash -c "source compose/interface/entrypoint.sh && make -C /app/docs html"

  documentation:
    build:
      context: .
      dockerfile: ./compose/documentation/Dockerfile-dev
    depends_on:
      - compile_docs
    working_dir: /app/docs/_build/html
    volumes:
      - ./docs/_build/html:/app/docs/_build/html:cached
      - ./:/app:cached
    command: python -m http.server
    ports:
      - "8002:8000"
